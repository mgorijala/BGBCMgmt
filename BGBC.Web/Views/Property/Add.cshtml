@model BGBC.Model.Property

@{
    ViewBag.Title = "Add Property";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="back">
    @using (Html.BeginForm("Confirm", "Property"))
    {
        @Html.AntiForgeryToken()
        <div class="">
            <h1>Add a Property</h1>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <fieldset>
                <legend>Basic Info</legend>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label required" })
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Nickname, htmlAttributes: new { @class = "control-label col-md-0" })
                            @Html.EditorFor(model => model.Nickname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nickname, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label required" })
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-0" })
                            @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label required" })
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label required" })
                            @Html.DropDownListFor(model => model.State, (IEnumerable<SelectListItem>)ViewBag.States, "--Select State--", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="editor-label">
                            @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label required" })
                            @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </fieldset>
            <fieldset>
                <legend>Payment Info</legend>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="">Rent Due Monthly On...</label>
                            <p style="font-size:small">Please Select which day of the month the rent is due </p>
                            <div class="col-md-2 no-padd">
                            @Html.DropDownListFor(model => model.RentDueDay, (IEnumerable<SelectListItem>)ViewBag.MonthDays, new { @class = "form-control col-md-6" })
                        </div>
                    </div>
                    </div>
                    <div class="col-md-6">
                        <div class="editor-label">
                            <label for="">Grace Period</label>
                            <p style="font-size:small">Number of days before late fees are assessed  </p>
                            <div class="col-md-2 no-padd">
                            @Html.DropDownListFor(model => model.GracePeriod, (IEnumerable<SelectListItem>)ViewBag.MonthDays, new { @class = "form-control col-md-6" })
                            </div>
                        </div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Penalty, htmlAttributes: new { @class = "control-label" })
                            <p style="font-size:small">fee charged after grace period has elasped  </p>
                            @Html.EditorFor(model => model.Penalty, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Penalty, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DailyPenalty, htmlAttributes: new { @class = "control-label" })
                            <p style="font-size:small">Additional fee charged each day after initial late penalty charge</p>
                            @Html.EditorFor(model => model.DailyPenalty, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DailyPenalty, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-2" style="width:130px;padding-left:15px;">
                        @Html.Label("Final Due Day :")
                    </div>
                    <div class="col-md-2 no-padd">
                        <label id="lblDisplay"></label>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group"> 
                            @Html.CheckBoxFor(model => model.LeaseDocument) <span><b>Lease Document is Required </b></span>
                        </div>
                    </div>
                    </div>
            </fieldset>
            <div class="alert alert-info">
                <p class="alert-link">
                    Please note that you will not be able to change the following fields once you've added this tenant.
                    <br />
                    You will need to contact BGBC Management to change these values.
                </p>
                <div style="padding-left:15px;padding-bottom:20px;">
                    <li>Rent Due Monthly On</li>
                    <li>Grace Period</li>
                    <li>Late Penalty Charge</li>
                    <li>Daily Late Penalty Charge</li>
                </div>
            </div>
            <br /> <br />

            <div class="form-group">
                <div class=" col-md-12">
                    <input type="submit" value="Add Property" class="btn btn-default" />
                   @Html.ActionLink("Cancel", "MyProperties", "Owner", null, new { @class = "btn-button primary" })                
                </div>
                <br />
            </div>
        </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        var RentDueDay = parseInt($("#RentDueDay option:selected").val(), 10);
        var GracePeriod = parseInt($("#GracePeriod option:selected").val(),10);
        var Total = RentDueDay + GracePeriod;
        var RentDueDay = 0;
        if (Total == 56 || Total == 28) {
            RentDueDay = 28;
        }
        else {
            RentDueDay = Total % 28;
        }
        $('#lblDisplay').text(RentDueDay);


      
        $('#RentDueDay,#GracePeriod').change(function () {
            var RentDueDay = parseInt($("#RentDueDay option:selected").val(), 10);
            var GracePeriod = parseInt($("#GracePeriod option:selected").val(),10);
            var Total = RentDueDay + GracePeriod;
            var RentDueDay = 0;
            var days = parseInt(28);
            if (Total == 56 || Total == 28) {
                RentDueDay = 28;
            }
            else {
                RentDueDay = Total % 28;
            }
            $('#lblDisplay').text(RentDueDay);
        });
    </script>

}