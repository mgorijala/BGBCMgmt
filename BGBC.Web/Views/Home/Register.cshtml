@model BGBC.Web.Models.Register
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="back">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <h1></h1>
    <div class="row">
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label required" })
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control " } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
        </div>
    <div class="row">
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label required" })
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
        </div> 
        <div class="row">
            <div class="form-group col-md-3 no-padd"> 
            @Html.LabelFor(p => p.UserType, htmlAttributes: new { @class = "control-label required" })
                    @Html.DropDownListFor(p => p.UserType, new List<SelectListItem> { new SelectListItem { Text = "Property owner", Value = "1" }, new SelectListItem { Text = "Customer", Value = "3" } }, "--Select--", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
        </div>
            </div> 
    <div class="row">
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label required" })
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
        </div>
    <div class="row">
        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label required" })
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
        </div>
    <div class="row">
        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
        </div>
        <input type="submit" value="Submit">

    }

</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
